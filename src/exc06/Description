                                    Автоматическое закрытие файла.
    В версии JDK 7 появилась новая возможность, предлагающая иной способ управления такими ресурсами, как
потоки ввода-вывода в файлы: автоматическое завершение процесса. Эту возможность иногда еще называют ав­то-
матическим управлением ресурсами (АRМ), и основывается она на усовершенствованной версии оператора try.
Главное преимущество автоматического управления ресурсами заключается в предотвращении ситуаций, когда файл
(или другой ресурс) не освобождается по невнимательности, если он больше не нужен. Как по­яснялось ранее,
если забыть по какой-нибудь причине закрыть файл, это может привести к утечке памяти и другим осложнениям.
    Автоматическое управление ресурсами основывается на усовершенствованной форме оператора try. Ниже при-
ведена его общая форма.

try (спецификация_ресурса) {
    // использование ресурса
}


    Здесь спецификация_ресурса обозначает оператор, объявляющий и инициализирующий такой ресурс, как поток
ввода-вывода в файл. Он состоит из объявле­ния переменной, где переменная инициализируется ссьлкой на управля-
емый объект. По завершении блока оператора try ресурс автоматически освобождается. Для файла это означает,
что он автоматически закрывается, а следовательно, отпадает необходимость вызывать метод close() явно. Данная
форма оператора try так же включает в себя операторы finally и catch. Она называется прератором try с ресурсами.
